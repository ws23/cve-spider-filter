import scrapy, datetime, os
from nvd.middlewares import SeleniumRequest


class NvdSpider(scrapy.Spider):

    name = 'nvd'

    allowed_domains = ['nvd.nist.gov']

    today = datetime.date.today()
    str_today = today.strftime('%Y%m%d')
    
    path = "C:\\Users\\momo\\cve\\cve.csv"
    
    file_cve = open(path + "cve.csv", "r+", encoding="utf-8")     # 尚未有分數的清單
    file_sent = open(path + "sent/", "a", encoding="utf-8")     # 要寄出通知的清單
    
    # 將檔案內容逐行存入 array
    cves = file_cve.read().splitlines()
    
    # 清空 cve.csv
    file_cve.seed(0)
    file_cve.truncate()
    
    # 刪除 csv 標題
    del cves[0]
    
    # 將待掃清單加入 url list
    # cve.csv
    #   [0] entry_data
    #   [1] cve_published_date
    #   [2] cve_id
    #   [3] cve_desc
    #   [4] cve_score
    #   [5] cve_severity
    #   [6] product
    
    start_urls = ["https://nvd.nist.gov/vuln/detail/{}".format(cves[0][2]]
    
    ##### 以下都還沒寫完 #####
    
        # 將 csv 拆成 array
        tmp = csv.split(',')
        length = len(csv)
        str = tmp[3]
        for i in range (3, 4+length-7, 1):
            str += "," + tmp[i]
        content = [tmp[0], tmp[1], tmp[2], str, tmp[length-3], tmp[length-2], tmp[length-1]]

    # 爬蟲起點
    def start_requests(self):
        for url in self.start_urls:
            yield scrapy.Request(url=url, callback=self.cve_parse)
    
    # 爬取新增/更新的 CVE 編號
    def cve_parse(self, response):
        
        for ids in res:
            id = ids.xpath("./text()").extract_first()
            cveid = "CVE-" + id
            url = "https://nvd.nist.gov/vuln/detail/{}".format(cveid)
            yield SeleniumRequest(url=url, callback=self.search, meta={'id':cveid})
    
    def search(self, response):
        len_cve = len(cves)
        for cve in range(1,len_cve,1):
            cvss = response.xpath("/html/body/div[2]/div[2]/div[2]/table/tbody/tr/td/div/div[1]/div[2]/div[2]/div[1]/div[2]/span/span/a/text()").extract_first()
            # 依舊沒有分數，寫入 cve.csv
            if cvss == "N/A":
                severity = ""
                score = ""
                
                
                
            # 新增分數，判斷是否通知
            else:
                severity = cvss.split(' ')[1]
                score = cvss.split(' ')[0]

