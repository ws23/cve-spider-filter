import datetime, logging
import conf

today = datetime.date.today()
str_today = today.strftime('%Y%m%d')

file_spider = open(conf.path + "spider.csv", "r+", encoding="utf-8")        # 爬出來的結果
file_product = open(conf.path + "product.csv", "r", encoding="utf-8")       # 廠商/產品
file_cve = open(conf.path + "cve.csv", "a", encoding="utf-8")               # 尚未有分數
file_pass = open(conf.path + "pass.csv", "a", encoding="utf-8")             # 不受影響 or 低風險
file_notified = open(conf.path + "notified.csv", "a", encoding="utf-8")     # 受影響
file_sent = open(conf.path + "sent\\" + str_today + ".csv", "w", encoding="utf-8")    # 通知信附件

str_today = today.strftime('%Y/%m/%d')

# 將檔案內容逐行存入 array
spiders = file_spider.read().splitlines()
products = file_product.read().splitlines()

# 刪除標題
del spiders[0]
del products[0]


# 信件 cvs 標題
file_sent.write("notified_date,cve_published_date,cve_id,cve_desc,cve_score,cve_severity,product\n")

# 將爬蟲結果分類
#  - 尚未有 CVSS score 的寫入 cve.csv
#  - 有 CVSS score 但 severity low 的寫入 pass.csv
#  - 有 CVSS score 且 severity medium 以上，但未在 product 清單的寫入 pass.csv
#  - 有 CVSS score 且 severity medium 以上，且在 product 清單的寫入 notified.csv、sent
for i in spiders: 
    # [0]description, [1]id, [2]is_new, [3]published date, [4]cvss score, [5]severity
    logging.warning(i)
    content = i.split(',CVE')
    if len(content) == 1: 
        continue
    tmp = content[1]
    tmp = tmp.split(',')
    content[1] = "CVE" + tmp[0]
    for j in [2,3,4,5]:
        content.append(tmp[j-1])
        
    # 舊條目不處理
    if content[2] == "F":
        continue
        
    # 檢查是否在受影響設備/產品中
    tmp = 0
    for j in products: 
        temp = " " + j + " "
        if temp.lower() in content[0].lower():
            tmp = 1
            data = str_today + "," + content[3] + "," + content[1] + "," + content[0] + "," + content[4] + "," + content[5] + "," + j + "\n"
            # 低風險不通知
            if content[5] == "LOW": 
                tmp = 0
            # 中高風險要通知
            elif content[5] == "MEDIUM" or content[5] == "HIGH" or content[5] == "CRITICAL":
                # notified.csv: 
                #   [0] notified date
                #   [1] cve published date
                #   [2] cve id
                #   [3] description
                #   [4] cvss score
                #   [5] severity
                #   [6] product
                file_notified.write(data)
                file_sent.write(data)
            # 尚未有分數，先暫存
            else:
                # cve.csv
                #   [0] entry_data
                #   [1] cve_published_date
                #   [2] cve_id
                #   [3] cve_desc
                #   [4] cve_score
                #   [5] cve_severity
                #   [6] product
                file_cve.write(data)
            break
    
    # 都不在受影響設備/產品中也不通知
    # pass.csv
    #   [0] checked date
    #   [1] cve published date
    #   [2] cve id
    #   [3] description
    #   [4] cvss score
    #   [5] severity
    if tmp == 0:
        file_pass.write(str_today + "," + content[3] + "," + content[1] + "," + content[0] + "," + content[4] + "," + content[5] + "\n")

file_spider.seek(0)
file_spider.truncate()

file_spider.close()
file_product.close()
file_cve.close()
file_pass.close()
file_notified.close()
file_sent.close()


